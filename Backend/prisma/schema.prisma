generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model campeonato {
  id_campeonato    Int             @id(map: "id_campeonato_fk") @default(autoincrement())
  id_tipo_fk       Int
  id_usuario_fk    Int
  nome_campeonato  String         @db.VarChar(200)
  data_campeonato  DateTime       @db.Date
  local_campeonato String        @db.VarChar(200)
  tipo_campeonato  tipo_campeonato @relation(fields: [id_tipo_fk], references: [id_tipo], onDelete: NoAction, onUpdate: NoAction, map: "id_tipo_fk")
  usuarios         usuarios        @relation(fields: [id_usuario_fk], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction, map: "id_usuario_fk")
}

model feedback {
  id_feedback         Int           @id(map: "id_feedback_pk") @default(autoincrement())
  id_tipo_feedback_fk Int
  nome                String?       @db.VarChar(200)
  email               String?       @db.VarChar(200)
  mensagem            String?       @db.VarChar(500)
  tipo_feedback       tipo_feedback @relation(fields: [id_tipo_feedback_fk], references: [id_tipo_feedback], onDelete: NoAction, onUpdate: NoAction, map: "id_tipo_feedback_fk")
}

model jogo {
  id_jogo          Int              @id(map: "id_jogo_pk") @default(autoincrement())
  id_campeonato_fk Int?
  data_jogo        DateTime?        @db.Date
  jogo_resultado   jogo_resultado[]
}

model jogo_resultado {
  id_jogo_resultado Int    @id(map: "id_jogo_resultado_pk") @default(autoincrement())
  id_jogo_fk        Int?
  id_time_fk        Int?
  jogo              jogo?  @relation(fields: [id_jogo_fk], references: [id_jogo], onDelete: NoAction, onUpdate: NoAction, map: "id_jogo_fk")
  times             times? @relation(fields: [id_time_fk], references: [id_time], onDelete: NoAction, onUpdate: NoAction, map: "id_time_fk")
}

model jogo_time {
  id_jogo_time Int    @id(map: "id_jogo_time_pk") @default(autoincrement())
  id_time_fk   Int?
  times        times? @relation(fields: [id_time_fk], references: [id_time], onDelete: NoAction, onUpdate: NoAction, map: "id_time_fk")
}

model times {
  id_time        Int              @id(map: "id_time_pk") @default(autoincrement())
  id_usuario_fk  Int?
  id_campeonato  Int?
  nome_time      String?          @db.VarChar(200)
  jogo_resultado jogo_resultado[]
  jogo_time      jogo_time[]
}

model tipo_campeonato {
  id_tipo    Int          @id @default(autoincrement())
  nome_tipo  String?      @db.VarChar(200)
  campeonato campeonato[]
}

model tipo_feedback {
  id_tipo_feedback Int        @id @default(autoincrement())
  descricao        String     @db.VarChar(200)
  feedback         feedback[]
}

model usuarios {
  id_usuario Int          @id @default(autoincrement())
  nome       String       @db.VarChar(200)
  email      String       @db.VarChar(200)
  senha      String       @db.VarChar(100)
  campeonato campeonato[]
}
